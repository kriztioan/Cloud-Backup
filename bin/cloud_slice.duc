#!/bin/bash
###
#  @file   cloud_slice.bash
#  @brief  DAR DUC
#  @author KrizTioaN (christiaanboersma@hotmail.com)
#  @date   2021-07-24
#  @note   BSD-3 licensed
#
###############################################

# Messaging

function message {
  /usr/local/bin/unbuffer echo "$(date "+%m-%d-%Y %H:%M:%S: $1")"
}

# Readable

CONTEXT="$1"
ARCHIVE="$2"
TARGET="$3"
SLICE="$4"
BASENAME="$5"
NSLICES="$6"

function upload {

  WAIT_PID=$(cat wait_pid)

  if [ $WAIT_PID -ne 0 ]; then

    message "+ wait on $(printf "$BASENAME.%06d.dar" $(($SLICE - 1)))"

    while kill -0 "$WAIT_PID" 2>/dev/null; do

      sleep 0.5
    done
  fi

  message "uploading $ARCHIVE"

  ( 
    (/usr/local/bin/rclone copy "$ARCHIVE" "$TARGET" -q) &
    CHILD_PID=$!
    /usr/local/bin/par2 c -r20 -n1 -m256 -qq "$ARCHIVE" 1>/dev/null
    wait $CHILD_PID
    for PAR in *.par2; do
      /usr/local/bin/rclone copy "$PAR" "$TARGET" -q
      rm -f "$PAR"
    done
    rm -f "$ARCHIVE"
    echo -n 0 >wait_pid
  ) &

  echo -n "$!" >wait_pid
}

function download {

  WAIT_PID=$(cat wait_pid)

  if [ $WAIT_PID -ne 0 ]; then

    message "+   wait on $ARCHIVE"

    while kill -0 "$WAIT_PID" 2>/dev/null; do

      sleep 0.5
    done
  fi

  NEXT_SLICE=$(($SLICE + 1))

  if [ $NEXT_SLICE -lt $NSLICES ]; then

    ARCHIVE=$(printf "$BASENAME.%06d.dar" "$NEXT_SLICE")

    message "downloading $ARCHIVE"

    (
      /usr/local/bin/rclone copy "$TARGET$ARCHIVE" . -q
      /usr/local/bin/rclone copy "$TARGET$ARCHIVE.par2" . -q
      /usr/local/bin/par2 v -m256 -qq "$ARCHIVE"
      if [ $? -ne 0 ]; then
        /usr/local/bin/rclone --include "$ARCHIVE.vol*+*.par2" copy "$TARGET" . -q
        message "+ repairing $ARCHIVE"
        /usr/local/bin/par2 r -m256 -qq "$ARCHIVE"
        rm -f "$ARCHIVE.vol*+*.par2"
      fi
      rm -f "$ARCHIVE.par2"
      echo 0 >wait_pid
    ) &

    echo $! >wait_pid
  fi
}

# Switch

case "$CONTEXT" in

create)

  echo -n "$SLICE" >"$BASENAME".slices

  BYTES=$(stat -f%z "$ARCHIVE")

  if [ $SLICE -gt 1 ]; then

    BYTES=$(($BYTES + $(cat "$BASENAME".bytes)))
  fi

  echo -n "$BYTES" >"$BASENAME".bytes

  upload
  ;;

extract)

  download

  if [ $SLICE -gt 1 ]; then

    rm -f $(printf "$BASENAME.%06d.dar" $(($SLICE - 1)))
  fi
  ;;

catalogue)

  message "downloading $ARCHIVE"
  /usr/local/bin/rclone copy "$TARGET$ARCHIVE" . -q
  /usr/local/bin/rclone copy "$TARGET$ARCHIVE.par2" . -q
  message "+ checking $ARCHIVE"
  /usr/local/bin/par2 v -m256 -qq "$ARCHIVE"

  if [ $? -ne 0 ]; then

    /usr/local/bin/rclone --include "$ARCHIVE.vol*+*.par2" copy "$TARGET" . -q
    message "+ repairing $ARCHIVE"
    /usr/local/bin/par2 r -m256 -qq "$ARCHIVE"
    rm -f "$ARCHIVE.vol*+*.par2"
  else

    message "+ OK"
  fi

  rm -f $ARCHIVE.par2

  if [ $SLICE -gt 1 ]; then

    ARCHIVE=$(printf "$BASENAME.%06d.dar" 1)

    message "downloading $ARCHIVE"

    (
      /usr/local/bin/rclone copy "$TARGET$ARCHIVE" . -q
      /usr/local/bin/rclone copy "$TARGET$ARCHIVE.par2" . -q
      message "+ checking $ARCHIVE"
      /usr/local/bin/par2 v -m256 -qq "$ARCHIVE"
      if [ $? -ne 0 ]; then
        /usr/local/bin/rclone --include "$ARCHIVE.vol*+*.par2" copy "$TARGET" . -q
        message "+ repairing $ARCHIVE"
        /usr/local/bin/par2 r -m256 -qq "$ARCHIVE"
        rm -f "$ARCHIVE.vol*+*.par2"
      else
        message "+ OK"
      fi
      rm -f "$ARCHIVE.par2"
      echo 0 >wait_pid
    ) &

    echo $! >wait_pid
  fi
  ;;

restore)

  ARCHIVE=$(printf "$BASENAME.%06d.dar" "$SLICE")

  if [ $SLICE -eq 0 ]; then

    SUPPORT_FOLDER="$HOME/Library/Application Support/Cloud Backup"
    source "$SUPPORT_FOLDER/etc/config"
    source "$SUPPORT_FOLDER/lib/db.bash"
    NAME="${BASENAME%.*}"
    LEVEL="${BASENAME##*.}"

    db_select "$NAME" "$LEVEL"

    ARCHIVE=$(printf "$BASENAME.%06d.dar" "$SLICES")
  fi

  if [ ! -e "$ARCHIVE" ]; then

    message "downloading $ARCHIVE"
    /usr/local/bin/rclone copy "$TARGET$ARCHIVE" . -q
    /usr/local/bin/rclone copy "$TARGET$ARCHIVE.par2" . -q
    message "+ checking $ARCHIVE"
    /usr/local/bin/par2 v -m256 -qq "$ARCHIVE"
    if [ $? -ne 0 ]; then
      /usr/local/bin/rclone --include "$ARCHIVE.vol*+*.par2" copy "$TARGET" . -q
      message "+ repairing $ARCHIVE"
      /usr/local/bin/par2 r -m256 -qq "$ARCHIVE"
    else
      message "+ OK"
    fi
  fi
  ;;
esac
